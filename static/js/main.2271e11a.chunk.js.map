{"version":3,"sources":["components/MovieCard.js","components/MoviesList.js","components/pages/MoviesPage.js","actions/movies.js","components/DetailPageCard.js","components/pages/DetailPage.js","components/AboutCard.js","components/pages/AboutPage.js","components/Footer.js","helpers/styleHelper.js","components/Header.js","App.js","serviceWorker.js","reducers/movies.js","reducers/rootReducer.js","index.js"],"names":["MovieCard","_ref","movie","react_default","a","createElement","GridColumn","Card","Image","src","show","image","medium","wrapped","ui","Content","className","style","height","header","name","Meta","premiered","Description","rating","average","extra","react_router_dom","to","id","Button","animated","visible","hidden","Icon","MoviesList","movies","emptyMessage","moviesList","react_spinners","size","color","loading","fetching","error","Grid","stackable","columns","map","components_MovieCard","key","length","MoviesPage","this","props","fetchMovies","components_MoviesList","react_scroll_up_button_default","Component","mapDispatchToProps","dispatch","type","payload","axios","get","then","result","data","connect","DetailPageCard","details","marginTop","divided","Row","stretched","Column","width","Segment","alt","dangerouslySetInnerHTML","__html","summary","DetailPage","state","_this2","fetch","concat","match","params","res","json","setState","components_DetailPageCard","AboutPage","AboutCard","Footer","inverted","margin","padding","vertical","Container","textAlign","Header_Header","as","content","List","link","Item","href","Divider","section","centered","horizontal","menuStyle","border","borderRadius","boxShadow","marginBottom","transition","fixedMenuStyle","backgroundColor","Header","menuFixed","overlayFixed","stickTopMenu","_this","unStickTopMenu","Visibility","onBottomPassed","onBottomVisible","once","Menu","borderless","fixed","text","Link","exact","NavLink","App","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","datas","components_Header","react_router","path","component","components_Footer","Boolean","window","location","hostname","initialState","combineReducers","arguments","undefined","action","objectSpread","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","reduxPromise","thunk","logger","ReactDOM","render","es","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2271e11a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Card, Icon, Button, Image, GridColumn } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nconst MovieCard = ({ movie }) => (\r\n  <GridColumn>\r\n    <Card>\r\n      <Image src={movie.show.image.medium} wrapped ui={false} />\r\n      <Card.Content className=\"cardheader\" style={{ height: '6.5rem' }} header={movie.show.name} />\r\n      <Card.Content>\r\n        <Card.Meta>\r\n          Pre. at: {movie.show.premiered}\r\n        </Card.Meta>\r\n        <Card.Description>\r\n          Rating: {movie.show.rating.average}\r\n        </Card.Description>\r\n      </Card.Content>\r\n      <Card.Content extra>\r\n        <Link to={\"/movies/\" + movie.show.id} >\r\n          <Button animated>\r\n            <Button.Content visible>Details</Button.Content>\r\n            <Button.Content hidden>\r\n              <Icon name='arrow right' />\r\n            </Button.Content>\r\n          </Button></Link>\r\n      </Card.Content>\r\n    </Card>\r\n  </GridColumn>\r\n)\r\n\r\nexport default MovieCard;","import React from 'react';\r\nimport propTypes from 'prop-types';\r\nimport MovieCard from './MovieCard';\r\nimport { Grid } from 'semantic-ui-react';\r\nimport { BounceLoader } from 'react-spinners';\r\n\r\n\r\nconst MoviesList = ({ movies }) => {\r\n\r\n    const emptyMessage = (\r\n        <p>There are no movies yet.</p>\r\n    );\r\n\r\n    const moviesList = (\r\n        <div>\r\n            <BounceLoader\r\n                size={150}\r\n                color={\"#ffff00\"}\r\n                loading={movies.fetching}\r\n            />\r\n            {\r\n                movies.error ? <h3>Error retrieving data!</h3>\r\n                    :\r\n                    <Grid stackable columns={3}>\r\n                        {\r\n                            movies.movies.map(movie => <MovieCard key={movie.show.id} movie={movie} />)\r\n                        }\r\n                    </Grid>\r\n            }\r\n        </div>\r\n    );\r\n\r\n    return (\r\n        <div>\r\n            {movies.length === 0 ? emptyMessage : moviesList}\r\n        </div>\r\n    );\r\n};\r\n\r\nMoviesList.propTypes = {\r\n    movies: propTypes.shape({\r\n        movies: propTypes.array.isRequired,\r\n    }).isRequired\r\n};\r\n\r\nexport default MoviesList;","import React, { Component } from 'react';\r\nimport ScrollUpButton from \"react-scroll-up-button\";\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport MoviesList from '../MoviesList';\r\n\r\nimport { fetchMovies } from '../../actions/movies';\r\n\r\nclass MoviesPage extends Component {\r\n    static propTypes = {\r\n        movies: PropTypes.object.isRequired\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.props.fetchMovies();\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <MoviesList movies={this.props.movies}></MoviesList>\r\n                <ScrollUpButton />\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStateToProps = ({ movies }) => {\r\n    return {\r\n        movies\r\n    }\r\n};\r\n\r\nconst mapDispatchToProps = {\r\n    fetchMovies\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MoviesPage);\r\n","import axios from 'axios';\r\n\r\nexport const FETCH_MOVIES_PENDING = \"FETCH_MOVIES_PENDING\";\r\nexport const FETCH_MOVIES_FULFILLED = \"FETCH_MOVIES_FULFILLED\";\r\nexport const FETCH_MOVIES_REJECTED = \"FETCH_MOVIES_ERROR_REJECTED\";\r\n\r\nexport function fetchMovies(){\r\n    return dispatch => {\r\n        dispatch({\r\n            type: \"FETCH_MOVIES\",\r\n            payload: axios.get(\"http://api.tvmaze.com/search/shows?q=batman\")\r\n            .then(result => result.data)\r\n        })\r\n    }\r\n}","import React from 'react'\r\nimport { Grid, Segment } from 'semantic-ui-react';\r\n\r\nconst DetailPageCard = ({ details }) => (\r\n    <div style={{ marginTop: \"40px\" }}>\r\n        <Grid columns={2} divided>\r\n            <Grid.Row stretched>\r\n                <Grid.Column width={6}>\r\n                    <Segment className=\"detailcardimg\"><img alt=\"img\" src={details && details.image.medium} /></Segment>\r\n                </Grid.Column>\r\n                <Grid.Column width={10}>\r\n                    <Segment><h1> {details && details.name}</h1></Segment>\r\n                    <Segment> <h2>Summary</h2> <div dangerouslySetInnerHTML={{ __html: details && details.summary }}></div></Segment>\r\n                </Grid.Column>\r\n            </Grid.Row>\r\n        </Grid>\r\n\r\n    </div>\r\n)\r\n\r\nexport default DetailPageCard;\r\n","import React, { Component } from 'react';\r\nimport DetailPageCard from '../DetailPageCard';\r\n\r\nclass DetailPage extends Component {\r\n\r\n    state = {\r\n        data: null\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`http://api.tvmaze.com/shows/${this.props.match.params.id}`)\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        data: result\r\n                    });\r\n                }\r\n            )\r\n\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n\r\n        return (\r\n            <div>\r\n                <DetailPageCard details={this.state.data} />\r\n            </div >\r\n        )\r\n    }\r\n}\r\nexport default DetailPage;\r\n","import React from 'react'\r\nimport { Grid, Image } from 'semantic-ui-react'\r\n\r\nconst AboutPage = () => (\r\n  <Grid>\r\n    <Grid.Column width={6}>\r\n      <Image src='http://s11.favim.com/orig/160406/batman-background-dc-comics-wallpaper-Favim.com-4172386.jpeg' />\r\n    </Grid.Column>\r\n    <Grid.Column width={9}>\r\n      <h1>Batman TV SERIES</h1> <br/> <h2>This website is to list Batman Tv Series that is been published and still going on. You can reach the offical social media platforms trought the icons and get more information.</h2>\r\n    </Grid.Column>\r\n    \r\n  </Grid>\r\n)\r\n\r\nexport default AboutPage","import React, { Component } from 'react'\r\nimport AboutCard from '../AboutCard'\r\n\r\nclass AboutPage extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <AboutCard/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default AboutPage;\r\n","import React from 'react';\r\nimport { Container, Divider, Grid, Header, Icon, Image, List, Segment } from 'semantic-ui-react';\r\n\r\n\r\nconst Footer = props => {\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Segment\r\n\t\t\t\tinverted\r\n\t\t\t\tstyle={{ margin: '5em 0em 0em', padding: '2em 0em', }}\r\n\t\t\t\tvertical\r\n\t\t\t>\r\n\t\t\t\t<Container textAlign='center'>\r\n\t\t\t\t\t<Grid columns={2} divided stackable inverted>\r\n\t\t\t\t\t\t<Grid.Row>\r\n\t\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t\t<Header inverted as='h4' content='Social Media' />\r\n\t\t\t\t\t\t\t\t<List link inverted>\r\n\t\t\t\t\t\t\t\t\t<List.Item as='a' href='https://www.instagram.com/batman/'> <Icon link name='instagram' /> Instagram</List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Item as='a' href='https://twitter.com/DCBatman'><Icon link name='twitter' /> Twitter</List.Item>\r\n\t\t\t\t\t\t\t\t\t<List.Item as='a' href='https://www.facebook.com/batman'><Icon link name='facebook' /> Facebook</List.Item>\r\n\t\t\t\t\t\t\t\t</List>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t\t<Grid.Column>\r\n\t\t\t\t\t\t\t\t<Header inverted as='h4' content='BATMAN TV SERIES WEBSITE' />\r\n\t\t\t\t\t\t\t\t<p>This website is to list Batman Tv Series that is been published and still going on. You can reach the offical social media platforms trought the icons and get more information.</p>\r\n\t\t\t\t\t\t\t</Grid.Column>\r\n\t\t\t\t\t\t</Grid.Row>\r\n\t\t\t\t\t</Grid>\r\n\t\t\t\t\t<Divider inverted section />\r\n\t\t\t\t\t<Image src='https://webcomicms.net/sites/default/files/clipart/129224/batman-icon-129224-6890084.png' centered size='mini' />\r\n\t\t\t\t\t<List horizontal inverted divided link>\r\n\t\t\t\t\t\t<List.Item as='a' href='#'>Site Map</List.Item>\r\n\t\t\t\t\t\t<List.Item as='a' href='#'>Contact Us</List.Item>\r\n\t\t\t\t\t\t<List.Item as='a' href='#'>Terms and Conditions</List.Item>\r\n\t\t\t\t\t\t<List.Item as='a' href='#'>Privacy Policy</List.Item>\r\n\t\t\t\t\t</List>\r\n\t\t\t\t</Container>\r\n\t\t\t</Segment>\r\n\t\t</div>\r\n\t);\r\n};\r\n\r\n\r\nexport default Footer;","export const menuStyle = {\r\n\tborder: 'none',\r\n\tborderRadius: 0,\r\n\tboxShadow: 'none',\r\n\tmarginBottom: '1em',\r\n\tmarginTop: '1em',\r\n\ttransition: 'box-shadow 0.5s ease, padding 0.5s ease',\r\n\r\n};\r\n\r\nexport const fixedMenuStyle = {\r\n\tbackgroundColor: '#fff',\r\n\tborder: '1px solid #ddd',\r\n\tboxShadow: '0px 3px 5px rgba(0, 0, 0, 0.2)',\r\n};\r\n\r\nexport const overlayStyle = {\r\n\tmargin: '0em 3em 1em 0em',\r\n};","import React, { Component } from 'react';\r\nimport { Link, NavLink } from \"react-router-dom\";\r\nimport { fixedMenuStyle, menuStyle } from \"../helpers/styleHelper\";\r\nimport { Container, Visibility, Menu, Image } from 'semantic-ui-react';\r\n\r\nclass Header extends Component {\r\n\tstate = {\r\n\t\tmenuFixed: null,\r\n\t\toverlayFixed: false,\r\n\t};\r\n\r\n\tstickTopMenu = () => this.setState({ menuFixed: null });\r\n\tunStickTopMenu = () => this.setState({ menuFixed: null });\r\n\r\n\trender() {\r\n\t\tconst { menuFixed } = this.state;\r\n\r\n\t\treturn (\r\n\t\t\t<div>\r\n\t\t\t\t<Visibility\r\n\t\t\t\t\tonBottomPassed={this.stickTopMenu}\r\n\t\t\t\t\tonBottomVisible={this.unStickTopMenu}\r\n\t\t\t\t\tonce={false}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Menu\r\n\t\t\t\t\t\tborderless\r\n\t\t\t\t\t\tfixed={menuFixed && 'top'}\r\n\t\t\t\t\t\tstyle={menuFixed ? fixedMenuStyle : menuStyle}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Container text>\r\n\t\t\t\t\t\t\t<Menu.Item as={Link} to=\"/\" exact=\"true\">\r\n\t\t\t\t\t\t\t\t<Image size='mini' src='https://webcomicms.net/sites/default/files/clipart/129224/batman-icon-129224-6890084.png' />\r\n\t\t\t\t\t\t\t\t<Menu.Item header>Batman TV Series</Menu.Item>\r\n\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t\t<Menu.Item as={NavLink} to=\"/about\">\r\n\t\t\t\t\t\t\t\tAbout\r\n\t\t\t\t\t\t\t\t</Menu.Item>\r\n\t\t\t\t\t\t</Container>\r\n\t\t\t\t\t</Menu>\r\n\t\t\t\t</Visibility>\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\nexport default Header;","\nimport React, { Component } from 'react'\nimport './App.scss';\nimport MoviesPage from './components/pages/MoviesPage.js';\nimport DetailPage from './components/pages/DetailPage';\nimport AboutPage from './components/pages/AboutPage';\nimport Footer from './components/Footer';\nimport Header from './components/Header';\nimport {Route} from 'react-router-dom';\nimport 'semantic-ui-css/semantic.min.css';\nimport { Container } from 'semantic-ui-react';\n\n\nclass App extends Component {\n\n  constructor(){\n    super()\n    this.state={datas: []}\n  }\n\n\n  render() {\n\t\t\n\t\treturn (\n\n      <div className=\"App\">\n        \n        <Header/>\n        <Container text>\n\t\t\t\t\t<Route exact path='/' component={MoviesPage}></Route>\n          <Route exact path='/movies/:id' component={DetailPage}></Route>\n          <Route exact path='/about' component={AboutPage}></Route>\n         \n        </Container>\n        <Footer/>\n      </div>\n\n    );\n\n  }\n\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {FETCH_MOVIES_FULFILLED,\r\n        FETCH_MOVIES_REJECTED,\r\n        FETCH_MOVIES_PENDING} from '../actions/movies';\r\n\r\nconst initialState = {\r\n    fetching: false,\r\n    movies: [],\r\n   \r\n};\r\n\r\nexport default (state = initialState, action ) => {\r\n    switch (action.type){\r\n        case FETCH_MOVIES_PENDING:\r\n            return{\r\n                ...state,\r\n                fetching:true\r\n            };\r\n        case FETCH_MOVIES_FULFILLED:\r\n            return {\r\n                ...state,\r\n                movies: action.payload,\r\n                fetching:false\r\n            };\r\n            case FETCH_MOVIES_REJECTED:\r\n                return {\r\n                    ...state,\r\n                    error: action.payload,\r\n                    fetching:false\r\n                };\r\n        default:\r\n            return state;\r\n    }\r\n}","import {combineReducers} from 'redux';\r\nimport movies from './movies';\r\n\r\nexport default combineReducers(\r\n    {movies}\r\n)","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers/rootReducer';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport logger from 'redux-logger';\nimport reduxPromise from 'redux-promise-middleware';\n\nconst store = createStore(\n    rootReducer,\n    composeWithDevTools(\n        applyMiddleware(reduxPromise, thunk, logger)\n    )\n);\n\nReactDOM.render(<BrowserRouter><Provider store={store}><App /></Provider></BrowserRouter>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}